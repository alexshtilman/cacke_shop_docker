version: "3.7"
services:
  api:
    build:
      context: ../cake_shop_backend_flask_rest
      dockerfile: Dockerfile
    command: gunicorn --bind 0.0.0.0:5000 main:app
    image: gungam/cake_shop_backend_flask_rest
    ports:
      - 80:5000
    deploy:
      placement:
        constraints: [node.role == manager]
    secrets:
      - psql_password
      - psql_user
      - psql_db
      - jwt_secret_key
      - setup_key
    environment:
      POSTGRES_PASSWORD: /run/secrets/psql_password
      POSTGRES_USER: /run/secrets/psql_user
      POSTGRES_DB: /run/secrets/psql_db
      DB_SERVER_NAME: db
      JWT_SECRET_KEY: /run/secrets/jwt_secret_key
      SETUP_KEY: /run/secrets/setup_key
      FLASK_ENV: production
    volumes:
      - appdata:/var/www/
    networks:
      - frontend
      - backend
    depends_on:
      - db

  db:
    image: postgres
    ports:
      - 5432:5432
    restart: always
    secrets:
      - psql_password
      - psql_user
      - psql_db
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/psql_password
      POSTGRES_USER_FILE: /run/secrets/psql_user
      POSTGRES_DB_FILE: /run/secrets/psql_db
    volumes:
      - ${HOME}/volumes/cake_shop/:/var/lib/postgresql/data
      - ./docker_postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
    networks:
      - backend
    deploy:
      placement:
        constraints: [node.role == manager]
  db_admin:
    image: dpage/pgadmin4
    ports:
      - 3000:80
    environment:
      PGADMIN_DEFAULT_EMAIL: user@domain.com
      PGADMIN_DEFAULT_PASSWORD: default_password
    networks:
      - backend
    depends_on:
      - db
    deploy:
      placement:
        constraints: [node.role == manager]
networks:
  frontend:
    driver: overlay
  backend:
    driver: overlay
volumes:
  appdata:
    driver: local
secrets:
  psql_password:
    external: true
  psql_user:
    external: true
  psql_db:
    external: true
  jwt_secret_key:
    external: true
  setup_key:
    external: true
